@using EPAM.Final_Common;
@using EPAM.Final_Entities;
@{
    Layout = "~/html/partial/_layout.cshtml";
    var userLogic = DependencyResolver.UserLogic;
    var threadLogic = DependencyResolver.ThreadLogic;
    IEnumerable<Thread> threads;
    bool threadsByUser = false;

    if (int.TryParse(Request.QueryString["userId"], out int id))
    {
        threadsByUser = true;
        var user = userLogic.Get(id);
        threads = threadLogic.GetAllByUser(id);
        <div class="heading"><p>Threads by @user.Username</p></div>
    }
    else
    {
        threads = threadLogic.GetAll();
    }

    if (threads != null)
    {
        foreach (var t in threads)
        {
            <div class="bordered">
                <a class="highlight" href="~/html/posts?threadId=@t.Id">@t.Subject</a>
                <div class="signature unpadded right">
                    <p>last message @($"{t.LastMessage:f}")</p>
                    @if (t.StartedBy.Equals(User.Identity.Name) && !User.IsInRole("banned"))
                    {
                        <a href="~/html/editThread?id=@t.Id">[Edit]</a>
                    }
                    @if (User.IsInRole("admin") || User.IsInRole("moderator"))
                    {
                        <a href="javascript:Confirmation('functional/deleteThread?id=@t.Id');">[Delete]</a>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="bordered">
            <p class="highlight">No threads</p>
        </div>
    }
}

@if (User.Identity.IsAuthenticated && !threadsByUser && !User.IsInRole("banned"))
{
    <div>
        <a class="bright" href="~/html/newThread">New thread</a>
    </div>
}
<head>
    <title>Simple Forum</title>
</head>