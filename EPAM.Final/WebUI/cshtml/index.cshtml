@{
    Layout = "~/cshtml/_layout.cshtml";
    var userLogic = EPAM.Final_Common.DependencyResolver.UserLogic;
    var threadLogic = EPAM.Final_Common.DependencyResolver.ThreadLogic;
    IEnumerable<EPAM.Final_Entities.Thread> threads;
    bool threadsByUser = false;

    if (int.TryParse(Request.QueryString["userId"], out int id))
    {
        threads = threadLogic.GetAllByUser(id);
        threadsByUser = true;
        var user = userLogic.Get(id);
        <h4>Threads by @user.Username</h4>
    }
    else
    {
        threads = threadLogic.GetAll();
    }

    if (threadsByUser)
    {

    }

    if (threads.Count() < 1)
    {
        <p>No threads</p>
    }
}
@foreach (var t in threads)
{
    <a href="~/cshtml/thread?threadId=@t.Id">
        <div class="highlight">
            <p class="title">@t.Subject</p>
            <p>last message @($"{t.LastMessage:f}")</p>
            @if (t.StartedBy.Equals(User.Identity.Name))
            {
                <a class="thickening" href="~/cshtml/editThread?id=@t.Id">Edit</a>
            }
            @if (User.IsInRole("admin"))
            {
                <a class="thickening" href="javascript:Confirmation('deleteThread?id=@t.Id');">Delete</a>
            }
        </div>
    </a>
}
@if (User.Identity.IsAuthenticated && !threadsByUser && !User.IsInRole("banned"))
{
    <footer>
        <a class="bright thickening" href="~/cshtml/newThread">New thread</a>
    </footer>
}
<title>Forum</title>