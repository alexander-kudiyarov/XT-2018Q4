@{
    var userLogic = EPAM.Task6._01_Users.Common.DependencyResolver.UserLogic;
    userLogic.LoadUserList();
    userLogic.LoadAwardList();
    userLogic.LoadProgramUserList();
    var users = userLogic.GetAll();
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="~/IndexStyle.css" />
    <script src="~/IndexScripts.js"></script>
    <title></title>
</head>
<body>
    <div class="navigation">
        @if (User.IsInRole("admin"))
        {
            <a href="~/administration.cshtml">Administration</a>
        }
        @if (User.Identity.IsAuthenticated)
        {
            <a href="~/logout">Log Out</a>
        }
        else
        {
            <a href="~/login">Log In</a>
        }
    </div>
    <div class="container">
        <div class="userList">
            <h2>Users and Awards</h2>
            <ul>
                @foreach (var user in users)
                {
                    var imgSrc = "https://www.aj-chambers.com/front/images/default-user.jpg";
                    if (user.Image != null)
                    {
                        var base64 = Convert.ToBase64String(user.Image);
                        imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                    }

                    <li><img id="user" src="@imgSrc" /> <p>@user.ToString()@if (User.Identity.IsAuthenticated)
                    {@user.ShowAwards();
                }</p></li>
                }
            </ul>
        </div>
        @if (User.IsInRole("admin"))
        {
            <div class="buttons">
                <button id="addUser" type="submit" onclick="AddUserMenu()">Add User</button>
                <button id="editUser" type="submit" onclick="EditUserMenu()">Edit User</button>
                <button id="addAward" type="submit" onclick="AddAwardMenu()">Add Award</button>
                <button id="removeAward" type="submit" onclick="RemoveAwardMenu()">Remove Award</button>
                <button id="removeUser" type="submit" onclick="RemoveUserMenu()">Remove User</button>
            </div>
            <div class="forms">
                <form id="addUserMenu" action="~/index.cshtml" method="post">
                    @if (IsPost && !Request["addFirstName"].IsEmpty())
                            {
                                string addFirstName = Request["addFirstName"];
                                string addLastName = Request["addLastName"];
                                if (DateTime.TryParse(Request["addBirthDate"], out DateTime addBirthDate))
                                {
                                    if (!Request["addUserImage"].IsEmpty())
                                    {
                                        byte[] image = File.ReadAllBytes(Request["addUserImage"]);
                                        var newUser = new EPAM.Task6._01_Users.Entities.User
                                        {
                                            FirstName = addFirstName.ToLower(),
                                            LastName = addLastName.ToLower(),
                                            DateOfBirth = addBirthDate,
                                            Image = image,
                                        };
                                        userLogic.AddUser(newUser);
                                    }
                                    else
                                    {
                                        var newUser = new EPAM.Task6._01_Users.Entities.User
                                        {
                                            FirstName = addFirstName,
                                            LastName = addLastName,
                                            DateOfBirth = addBirthDate,
                                        };
                                        userLogic.AddUser(newUser);
                                    }
                                    Response.Redirect("~/index.cshtml");
                                }
                            }
                </form>
                <form id="editUserMenu" action="~/index.cshtml" method="post">
                    @if (IsPost && (!Request["editId"].IsEmpty()))
                    {

                        if (int.TryParse(Request["editId"], out int editId))
                        {
                            string editFirstName = Request["editFirstName"];
                            string editLastName = Request["editLastName"];
                            string editBirthDate = Request["editBirthDate"];
                            userLogic.EditUser(editId, editFirstName, editLastName, editBirthDate);
                            Response.Redirect("~/index.cshtml");
                        }
                    }
                </form>
                <form id="removeUserMenu" action="~/index.cshtml" method="post">
                    @if (IsPost && !Request["removeId"].IsEmpty())
                    {
                        char[] div = { '.', ',', ' ' };
                        string[] removeIdList = Request["removeId"].Split(div, StringSplitOptions.RemoveEmptyEntries);
                        foreach (var id in removeIdList)
                        {
                            userLogic.Remove(Convert.ToInt32(id));
                        }
                        Response.Redirect("~/index.cshtml");
                    }
                </form>
                <form id="addAwardsMenu" action="~/index.cshtml" method="post">
                    @if (IsPost && !Request["addAwardTitle"].IsEmpty())
                    {
                        string awardTitle = Request["addAwardTitle"].ToLower();
                        {
                            var newAward = new EPAM.Task6._01_Users.Entities.Award(awardTitle);
                            try
                            {
                                userLogic.AddAward(newAward);
                                char[] div = { '.', ',', ' ' };
                                string[] addAwardIdList = Request["addAwardId"].Split(div, StringSplitOptions.RemoveEmptyEntries);
                                foreach (var id in addAwardIdList)
                                {
                                    userLogic.AddAwardToUser(Convert.ToInt32(id), newAward);
                                }
                                Response.Redirect("~/index.cshtml");
                            }
                            catch (ArgumentException)
                            {
                                @:<script>alert("This award already exist")</script>
                            }

                        }
                    }
                </form>
                <form id="removeAwardsMenu" action="~/index.cshtml" method="post">
                    @if (IsPost && !Request["removeAwardTitle"].IsEmpty())
                    {
                        string removeAwardTitle = Request["removeAwardTitle"];
                        userLogic.RemoveAward(removeAwardTitle);
                        Response.Redirect("~/index.cshtml");
                    }
                </form>
            </div>
        }
    </div>
</body>
</html>